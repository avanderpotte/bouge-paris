angular.module('datavizApp', ['ui.router','ngAnimate','ngMap']);

// ------------------- CONFIG -------------------
  function config($stateProvider, $urlRouterProvider, $locationProvider, $httpProvider, $sceDelegateProvider){
    // ----- ROUTING -----
    $urlRouterProvider.otherwise("/");

    $stateProvider
      .state('accueil', {
        url: "/",
        templateUrl: 'app/views/accueil.html',
        controller: 'accueilCtrl',
        seo: {
          title: 'Accueil',
          description: ''
        }
      })
      .state('arrondissement', {
        url: "/arrondissement/:numero",
        templateUrl: 'app/views/arrondissement.html',
        controller: 'arrCtrl',
        seo: {
          title: 'Arrondissement',
          description: ''
        }
      })
      .state('statistiques', {
        url: "/statistiques",
        templateUrl: 'app/views/statistiques.html',
        controller: 'statsCtrl',
        seo: {
          title: 'Statistiques',
          description: ''
        }
      });

    // ----- HTTP HEADERS -----
    // $httpProvider.defaults.headers.common['IniRequestAjax'] = 'angular request';
    // $httpProvider.defaults.headers.common['Accept'] = 'application/json, text/javascript';
    // $httpProvider.defaults.headers.common['Content-Type'] = 'application/json; charset=utf-8';
    // $httpProvider.defaults.useXDomain = true;

    // ----- URL WHITELIST -----
    // $sceDelegateProvider.resourceUrlWhitelist(['self','http://adrien-vanderpotte.net/**']);

    // ----- HASHBANG -----
    // $locationProvider.html5Mode(true);
  }

  function state($rootScope, $location, $state, $timeout){
    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams){
      $rootScope.title = toState.seo.title;
      $rootScope.description = toState.seo.description;
    });
  }

  angular
    .module('datavizApp')
    .config(config)
    .run(state);


function getType(a, b, c){
  var score = a + b + c;
  var cl;
  if(score >= 0 && score <= 5){
    cl = 'calme';
  }
  else if(score >5 && score <= 10){
    cl = 'tranquille';
  }
  else if(score >10 && score <= 15){
    cl = 'ambiance';
  }
  else if(score >15 && score <= 20){
    cl = 'dejante';
  }
  return cl;
}

/**
 * [accueilCtrl accueil controller]
 * @param  {[object]} $scope     [current scope]
 * @param  {[object]} $state     [ui router instance]
 * @param  {[function]} arrFac     [factory which deliver data]
 * @param  {[object]} $rootScope [application scope]
 */
function accueilCtrl($scope, $state, arrFac, $rootScope){

  // GET ALL ARRONDISSEMENTS DATA
  var allData = arrFac.getData();
  allData.then(function(data){
    // CALCULATE THE SCORE AND GET THE TYPE OF EACH ARRONDISSEMENT
    for(var i = 1; i <= 20; i++){
      var m = data[i].musees.length;
      var c = data[i].cinemas.length;
      var e = data[i].evenements.length;
      var score = m + c + e;
      var cl = getType(m, c, e);
      document.getElementById('arr'+i).classList.add(cl);
    }
  });

  // ADD CLICK EVENT LISTNER ON EACH ARRONDISSEMENT PATH
  var gs = document.querySelectorAll('g');
  for(var k = 0; k < gs.length; k++){
    gs[k].addEventListener('click', function(e){
      t = e.target.parentNode;
      id = t.id;
      arr = id.substring(3, id.length);
      type = t.classList[0];
      $rootScope.type = type;
      $state.go('arrondissement', {numero: arr})
    });
  }

  // CLICK FUNCTION TO PUT FORWARD CHOSEN ELEMENTS
  $scope.filter = function($event){
    var lis = document.querySelectorAll('.legend li');
    if($event.target.classList.contains('active')){
      // REMOVE ACTIVE
      for(r = 0; r < lis.length; r++){
        lis[r].classList.remove('active');
      }

      // SET OPACITY TO A FOR ALL
      var gAll = document.querySelectorAll('g');
      for( var j = 0; j < gAll.length; j++){
        var current = gAll[j];
        current.style.opacity = "1";
      }
    } else {
      // REMOVE ACTIVE
      for(r = 0; r < lis.length; r++){
        lis[r].classList.remove('active');
      }

      $event.target.classList.add('active');

      // SET OPACITY TO 0.3 FOR THE OTHERS
      var gAll = document.querySelectorAll('g');
      for( var j = 0; j < gAll.length; j++){
        var current = gAll[j];
        current.style.opacity = "0.2";
      }

      // OPACITY FOR CHOSEN ELEMENTS
      var f = $event.target.classList[0];
      var g = document.querySelectorAll('g.'+f);
      for( var k = 0; k < g.length; k++){
        var current = g[k];
        current.style.opacity = "1";
      }
    }
  }
}

angular
  .module('datavizApp')
  .controller('accueilCtrl', accueilCtrl)

/**
 * [arrCtrl arrondissement controller]
 * @param  {[object]} $stateParams [contains data passed through URL]
 * @param  {[object]} $scope       [current scope]
 * @param  {[object]} $rootScope   [application scope]
 * @param  {[function]} arrFac       [factory which deliver data]
 * @param  {[object]} NgMap       [google maps directive instance]
 */
function arrCtrl($stateParams, $scope, $rootScope, arrFac, NgMap){
  // GET ARRONDISEMENT NUMBER FROM STATE PARAMS
  var num = $stateParams.numero;
  $rootScope.arrondissement = num;
  $rootScope.title += ' ' + $rootScope.arrondissement;

  // GET CURRENT ARRONDISEMENT DATA
  var arrData = arrFac.getArrData(num);
  arrData.then(function(data){
    $scope.name = data.nom;
    var cinemasCount = data.cinemas.length;
    var museesCount = data.musees.length;
    var evenementsCount = data.evenements.length;

    // GET THE SCORE = TYPE OF THE CURRENT ARRONDISSEMENT (dejante, ambiance, tranquille or calme)
    var type = getType(cinemasCount, museesCount, evenementsCount);
    $rootScope.type = type;

    // INITIALIZE INFOS
    $scope.infos = [];

    // TEST NUMBER OF DIFFERENTS ELEMENTS (1/2/3)

    // 3 ELEMENTS
    if(cinemasCount > 0 && museesCount > 0 && evenementsCount > 0){
      // PUSH CINEMAS INFOS
      var cinemasName = cinemasCount === 1 ? "cinéma" : "cinémas";
      var cinemasObj = {
        "slug" : "cinemas",
        "name" : cinemasName,
        "count" : cinemasCount
      };
      $scope.infos.push(cinemasObj);

      // PUSH MUSEES INFOS
      var museesName = museesCount === 1 ? "musée" : "musées";
      var museesObj = {
        "slug" : "musees",
        "name" : "musées",
        "count" : museesCount
      };
      $scope.infos.push(museesObj);

      // PUSH EVENEMENTS INFOS
      var evenementsName = evenementsCount === 1 ? "événement" : "événements";
      var evenementsObj = {
        "slug" : "evenements",
        "name" : evenementsName,
        "count" : evenementsCount
      };
      $scope.infos.push(evenementsObj);
      // ADD CLASS FOR LAYOUT
      document.querySelector('#arrondissement .right').classList.add('three');
    }

    // 2 ELEMENTS
    else if(cinemasCount > 0 && museesCount > 0 || cinemasCount > 0 && evenementsCount > 0 || museesCount > 0 && evenementsCount > 0){

      // TEST AND PUSH CINEMAS INFOS
      if(cinemasCount > 0){
        var cinemasName = cinemasCount === 1 ? "cinéma" : "cinémas";
        var cinemasObj = {
          "slug" : "cinemas",
          "name" : cinemasName,
          "count" : cinemasCount
        };
        $scope.infos.push(cinemasObj);
      }

      // TEST AND PUSH MUSEES INFOS
      if(museesCount > 0){
        var museesName = museesCount === 1 ? "musée" : "musées";
        var museesObj = {
          "slug" : "musees",
          "name" : "musées",
          "count" : museesCount
        };
        $scope.infos.push(museesObj);
      }

      // TEST AND PUSH EVENEMENTS INFOS
      if(evenementsCount > 0){
        var evenementsName = evenementsCount === 1 ? "événement" : "événements";
        var evenementsObj = {
          "slug" : "evenements",
          "name" : evenementsName,
          "count" : evenementsCount
        };
        $scope.infos.push(evenementsObj);
      }

      // ADD CLASS FOR LAYOUT
      document.querySelector('#arrondissement .right').classList.add('two');
    }

    // 1 ELEMENT
    else {
      // TEST AND PUSH CINEMAS INFOS
      if(cinemasCount > 0){
        var cinemasName = cinemasCount === 1 ? "cinéma" : "cinémas";
        var cinemasObj = {
          "slug" : "cinemas",
          "name" : cinemasName,
          "count" : cinemasCount
        };
        $scope.infos.push(cinemasObj);
      }

      // TEST AND PUSH MUSEES INFOS
      if(museesCount > 0){
        var museesName = museesCount === 1 ? "musée" : "musées";
        var museesObj = {
          "slug" : "musees",
          "name" : "musées",
          "count" : museesCount
        };
        $scope.infos.push(museesObj);
      }

      // TEST AND PUSH EVENEMENTS INFOS
      if(evenementsCount > 0){
        var evenementsName = evenementsCount === 1 ? "événement" : "événements";
        var evenementsObj = {
          "slug" : "evenements",
          "name" : evenementsName,
          "count" : evenementsCount
        };
        $scope.infos.push(evenementsObj);
      }

      // ADD CLASS FOR LAYOUT
      document.querySelector('#arrondissement .right').classList.add('one');
    }

    // PANEL TOGGLE
    $scope.showPanel = false;
    $scope.slidePanel = function(cat){
      $scope.showPanel = true;
      $scope.panel = cat;
      $scope.list = data[cat];
    }

    // ------------------------------------------------------------------------
    // GOOGLE MAPS
    // ------------------------------------------------------------------------

    // GOOGLE MAPS INFOS
    $scope.showMap = false;
    $scope.data = data;
    $scope.arrCenter = $scope.data.centre;

    // MUSEES POSITIONS
    $scope.museesPos = [];
    for(var i = 0; i < $scope.data.musees.length; i++){
      r = $scope.data.musees[i];
      pos = r.coord.split(',');
      $scope.museesPos.push({
        nom: r.nom,
        adresse: r.adresse,
        lat: pos[0],
        long: pos[1]
      });
    }

    // CINEMA POSITIONS
    $scope.cinemasPos = [];
    for(var j = 0; j < $scope.data.cinemas.length; j++){
      r = $scope.data.cinemas[j];
      pos = r.coord.split(',');
      $scope.cinemasPos.push({
        nom: r.nom,
        adresse: r.adresse,
        lat: pos[0],
        long: pos[1]
      });
    }

    // EVENEMNTS POSITIONS
    $scope.evenementsPos = [];
    for(var k = 0; k < $scope.data.evenements.length; k++){
      r = $scope.data.evenements[k];
      pos = r.coord.split(',');
      $scope.evenementsPos.push({
        nom: r.nom,
        adresse: r.adresse,
        lat: pos[0],
        long: pos[1]
      });
    }

    // CUSTOM STYLE FOR GOOGLE MAPS (THX SNAZZYMAPS.COM)
    var styles = [{"featureType":"water","elementType":"geometry","stylers":[{"color":"#e9e9e9"},{"lightness":17}]},{"featureType":"landscape","elementType":"geometry","stylers":[{"color":"#f5f5f5"},{"lightness":20}]},{"featureType":"road.highway","elementType":"geometry.fill","stylers":[{"color":"#ffffff"},{"lightness":17}]},{"featureType":"road.highway","elementType":"geometry.stroke","stylers":[{"color":"#ffffff"},{"lightness":29},{"weight":0.2}]},{"featureType":"road.arterial","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":18}]},{"featureType":"road.local","elementType":"geometry","stylers":[{"color":"#ffffff"},{"lightness":16}]},{"featureType":"poi","elementType":"geometry","stylers":[{"color":"#f5f5f5"},{"lightness":21}]},{"featureType":"poi.park","elementType":"geometry","stylers":[{"color":"#dedede"},{"lightness":21}]},{"elementType":"labels.text.stroke","stylers":[{"visibility":"on"},{"color":"#ffffff"},{"lightness":16}]},{"elementType":"labels.text.fill","stylers":[{"saturation":36},{"color":"#333333"},{"lightness":40}]},{"elementType":"labels.icon","stylers":[{"visibility":"off"}]},{"featureType":"transit","elementType":"geometry","stylers":[{"color":"#f2f2f2"},{"lightness":19}]},{"featureType":"administrative","elementType":"geometry.fill","stylers":[{"color":"#fefefe"},{"lightness":20}]},{"featureType":"administrative","elementType":"geometry.stroke","stylers":[{"color":"#fefefe"},{"lightness":17},{"weight":1.2}]}];


    // GET MAP INSTANCE AND SET OPTIONS
    NgMap.getMap().then(function(map){
      map.setOptions({styles: styles});
      google.maps.event.trigger(map, 'resize');
    });
    $scope.$on('mapInitialized', function(event, map) {
      $scope.objMapa = map;
      map.setOptions({styles: styles});
      google.maps.event.trigger(map, 'resize');
    });

    // CLOSE MAP ON BUTTON CLICK
    $scope.toggleMap = function(){
      $scope.showMap = false;
    };

    // CREATE INFOWINDOW
    $scope.showInfoWindow = function (event, data) {
      infowindow = new google.maps.InfoWindow();
      center = new google.maps.LatLng(data.lat,data.long);

      infowindow.setContent('<h3>' + data.nom + '</h3><br>'+data.adresse);
      infowindow.setPosition(center);
      infowindow.open($scope.objMapa);

      // CUSTOM STYLE FOR INFOWINDOW
      google.maps.event.addListener(infowindow, 'domready', function() {
        iwOuter = document.querySelectorAll('.gm-style-iw');
        for(var g = 0; g < iwOuter.length; g++){
          iwBg = iwOuter[g].previousElementSibling;
          iwBg.style.display = "none";
          iwOuter[g].parentNode.parentNode.style.left = "170px";
          btn = iwOuter[g].nextElementSibling;
          btn.style.opacity = "1";
          btn.style.right = "-1px";
          btn.style.top = "-3px";
          btn.style.border = "4px solid #130084";
          btn.style.borderRadius = "50%";
        }
      });
    };
  });
}

angular
  .module('datavizApp')
  .controller('arrCtrl', arrCtrl)

/**
 * [statsCtrl statistiques controller]
 * @param  {[object]} $scope     [current scope]
 * @param  {[function]} arrFac     [factory which deliver data]
 * @param  {[object]} $rootScope [application scope]
 */
function statsCtrl($scope, arrFac, $rootScope){
  var arrData = [];
  var chart = document.querySelector('.ct-chart');
  var cWidth = chart.offsetWidth;
  var cHeight = chart.offsetHeight;
  var barWidth = (cWidth - 190) / 20;

  // GET ALL ARRONDISSEMENTS DATA
  var allData = arrFac.getData();
  allData.then(function(data){
    var labels = [];
    var series = [];
    var mArr = [];
    var cArr = [];
    var eArr = [];
    var clArr = [];
    // LOOP TO FILL ARRAYS
    for(var i = 1; i <= 20; i++){
      labels.push(''+i+'');
      var m = data[i].musees.length > 0 ? data[i].musees.length : 0;
      var c = data[i].cinemas.length > 0 ? data[i].cinemas.length : 0;
      var e = data[i].evenements.length > 0 ? data[i].evenements.length : 0;
      var score = m + c + e;
      var cl = getType(m, c, e);
      clArr.push(cl);
      mArr.push({
        meta: 'Musées : ',
        value: m
      });
      cArr.push({
        meta: 'Cinémas : ',
        value: c
      });
      eArr.push({
        meta: 'Événements : ',
        value: e
      });
    }
    series.push(mArr, cArr, eArr);

    // CREATE STACKED BAR CHAR
    new Chartist.Bar('.ct-chart', {
      labels: labels,
      series: series
    }, {
      stackBars: true,
      axisY: {
        labelInterpolationFnc: function(value) {
          return Math.ceil(value);
        }
      },
      plugins: [
        Chartist.plugins.tooltip({
          appendToBody: true
        })
      ]
    }).on('draw', function(data) {
      if(data.type === 'bar') {
        data.element.attr({
          style: 'stroke-width: '+barWidth+'px'
        });
        data.element._node.classList.add(clArr[data.index], 'n-'+(data.index+1));
      }
    });

    // CLICK FUNCTION TO PUT FORWARD CHOSEN ELEMENTS
    $scope.filter = function($event){
      var lis = document.querySelectorAll('.legend li');

      if($event.target.classList.contains('active')){
        // REMOVE ACTIVE
        for(r = 0; r < lis.length; r++){
          lis[r].classList.remove('active');
        }

        // SET OPACITY TO 1 FOR ALL
        var lAll = document.querySelectorAll('line');
        for( var j = 0; j < lAll.length; j++){
          var current = lAll[j];
          current.style.opacity = "1";
        }
      } else {
        // REMOVE ACTIVE
        for(r = 0; r < lis.length; r++){
          lis[r].classList.remove('active');
        }

        $event.target.classList.add('active');
        // SET OPACITY TO 0.3 FOR THE OTHERS
        var lAll = document.querySelectorAll('line');
        for( var j = 0; j < lAll.length; j++){
          var current = lAll[j];
          current.style.opacity = "0.2";
          current.classList.add('off');
        }

        // OPACITY FOR CHOSEN ELEMENTS
        var f = $event.target.classList[0];
        var l = document.querySelectorAll('line.'+f);
        for( var k = 0; k < l.length; k++){
          var current = l[k];
          current.style.opacity = "1";
          current.classList.remove('off');
        }
      }
    }

    // LINE HOVER DECOMPOSITION EFFECT
    document.querySelector('.ct-chart').addEventListener('mousemove', function(e){
      if(e.target.nodeName === 'line' && e.target.classList[0] === 'ct-bar'){
        if(document.querySelector('.l-1')) document.querySelector('.l-1').classList.remove('l-1');
        if(document.querySelector('.l-2')) document.querySelector('.l-2').classList.remove('l-2');
        if(document.querySelector('.l-3')) document.querySelector('.l-3').classList.remove('l-3');
        classes = e.target.classList;
        arr = classes[2].substring(2, classes[2].length);
        lines = document.getElementsByClassName(classes[2]);
        for(var d = 0; d < lines.length; d++){
          lines[d].classList.add('l-'+(d+1));
        }
      }
    });
    document.querySelector('.ct-chart').addEventListener('mouseleave', function(e){
      if(document.querySelector('.l-1')) document.querySelector('.l-1').classList.remove('l-1');
      if(document.querySelector('.l-2')) document.querySelector('.l-2').classList.remove('l-2');
      if(document.querySelector('.l-3')) document.querySelector('.l-3').classList.remove('l-3');
    });
  });
}

angular
  .module('datavizApp')
  .controller('statsCtrl', statsCtrl)

/**
 * [arrFac deliver data about arrondissements]
 * @param  {[function]} $http [allow ajax call]
 * @param  {[function]} $q    [implementation of promises/deferred objects]
 * @return {[object]}       [asked data]
 */
function arrFac($http, $q){
  var Factory = {
    getData: function(){
      var defer = $q.defer();
      $http.get('app/data/data.json')
        .success(function(data, status){
          defer.resolve(data);
        })
        .error(function(data, status){
          defer.reject(data);
        });
      return defer.promise;
    },

    getArrData: function(num){
      var defer = $q.defer();
      $http.get('app/data/data.json')
        .success(function(data, status){
          defer.resolve(data[num]);
        })
        .error(function(data, status){
          defer.reject(data);
        });
      return defer.promise;
    }
  }
  return Factory;
};

angular
  .module('datavizApp')
  .factory('arrFac', arrFac);

function iconSvg(){
  return {
    restrict: 'E',
    replace: 'true',
    scope: {
      name: '@name'
    },
    link: function(scope, element, attrs) {
        scope.contentUrl = 'app/directives/icon/templates/' + attrs.name + 'Template.html';
        attrs.$observe("name",function(v){
            scope.contentUrl = 'app/directives/icon/templates/' + v + 'Template.html';
        });
    },
    template: '<div ng-include="contentUrl"></div>'
  }
}

angular
  .module('datavizApp')
  .directive('iconSvg', iconSvg);

function creditsOverlay(){
  return {
    restrict: 'E',
    replace: 'true',
    templateUrl: 'app/directives/credits/creditsTemplate.html',
    link: function($scope, element, attrs){
    }
  }
}

angular
  .module('datavizApp')
  .directive('creditsOverlay', creditsOverlay);

function navTop(){
  return {
    restrict: 'E',
    replace: 'true',
    templateUrl: 'app/directives/nav/navTemplate.html',
    link: function($scope, element, attrs){
    }
  }
}

angular
  .module('datavizApp')
  .directive('navTop', navTop);
